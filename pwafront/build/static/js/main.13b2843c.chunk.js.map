{"version":3,"sources":["Connexion.js","Inscription.js","HomePageConnecte.js","AjouterBonPlan.js","MesBonPlans.js","utils/http.js","push-notifications.js","usePushNotifications.js","PushNotificationDemo.js","App.js","index.js"],"names":["Connexion","useState","password","setPassword","email","setEmail","navigate","useNavigate","className","onSubmit","event","preventDefault","axios","post","header","then","res","localStorage","setItem","data","token","catch","error","alert","htmlFor","type","name","id","placeholder","value","onChange","target","required","to","Inscrire","HomePageConnecte","getItem","onClick","AddBonPlan","Name","setName","Description","setDescription","Prix","setPrix","Promotion","setPromotion","image","prix","promotion","response","length","map","bonplan","key","style","backgroundImage","backgroundSize","backgroundRepeat","host","http","path","body","console","log","fetch","credentials","headers","JSON","stringify","method","mode","json","get","pushServerPublicKey","a","Notification","requestPermission","navigator","serviceWorker","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","pushNotificationSupported","window","usePushNotifications","permission","userConsent","setSuserConsent","userSubscription","setUserSubscription","pushServerSubscriptionId","setPushServerSubscriptionId","setError","loading","setLoading","useEffect","register","getSubscription","pushSubscription","existingSubscription","getExixtingSubscription","onClickAskUserPermission","askUserPermission","consent","message","code","onClickSusbribeToPushNotification","createNotificationSubscription","subscrition","err","onClickSendSubscriptionToPushServer","onClickSendNotification","title","Loading","Error","PushNotificationDemo","isConsentGranted","disabled","Home","display","flexDirection","alignItems","gap","border","borderRadius","textDecoration","color","padding","App","element","addEventListener","registration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TA0DeA,MApDf,WAAsB,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,KAGXC,EAAWC,cAgBjB,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,YAAYC,SAjBnB,SAAAC,GACjBA,EAAMC,iBACNC,IAAMC,KAAK,yCAA0C,CAAET,MAAOA,EAAOF,SAAUA,GAAY,CAAEY,OAAQ,CAAE,eAAgB,uEAClHC,MAAK,SAAAC,GACFN,EAAMC,iBACNM,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCH,aAAaC,QAAQ,QAASd,GAE9BE,EAAS,gBACVe,OAAM,SAACC,GACNC,MAAM,cAQF,yCAEA,yBAAKf,UAAU,aACX,yBAAKA,UAAU,YACX,2BAAOgB,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,QAAQC,MAAOzB,EAAO0B,SAAU,SAACpB,GAAD,OAAWL,EAASK,EAAMqB,OAAOF,QAAQG,UAAQ,KAG7I,yBAAKxB,UAAU,YACX,2BAAOgB,QAAQ,gBAAf,gBACA,2BAAOC,KAAK,WAAWC,KAAK,eAAeC,GAAG,eAAeE,MAAO3B,EAAU4B,SAAU,SAACpB,GAAD,OAAWP,EAAYO,EAAMqB,OAAOF,QAAQD,YAAY,WAC5II,UAAQ,KAGhB,yBAAKxB,UAAU,SACX,4BAAQiB,KAAK,UAAb,gBACA,kBAAC,IAAD,CAAMjB,UAAU,SAASyB,GAAG,aAA5B,gBACA,yBAAKN,GAAG,oBCYrBO,MApDf,WAAqB,IAAD,EACgBjC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAEUF,mBAAS,IAFnB,mBAETG,EAFS,KAEFC,EAFE,KAGVC,EAAWC,cAgBjB,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,YAAYC,SAjBnB,SAAAC,GACjBA,EAAMC,iBACNC,IAAMC,KAAK,wCAAyC,CAAET,MAAOA,EAAOF,SAAUA,GAAY,CAAEY,OAAQ,CAAE,eAAgB,uEACjHC,MAAK,SAAAC,GACFN,EAAMC,iBACNM,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCH,aAAaC,QAAQ,QAASd,GAC9BmB,MAAM,uBACNjB,EAAS,gBACVe,OAAM,SAACC,GACNC,MAAM,cAQF,2CAEA,yBAAKf,UAAU,aACX,yBAAKA,UAAU,YACX,2BAAOgB,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,QAAQC,MAAOzB,EAAO0B,SAAU,SAACpB,GAAD,OAAWL,EAASK,EAAMqB,OAAOF,QAAQG,UAAQ,KAG7I,yBAAKxB,UAAU,YACX,2BAAOgB,QAAQ,gBAAf,gBACA,2BAAOC,KAAK,WAAWC,KAAK,eAAeC,GAAG,eAAeE,MAAO3B,EAAU4B,SAAU,SAACpB,GAAD,OAAWP,EAAYO,EAAMqB,OAAOF,QAAQD,YAAY,WAC5II,UAAQ,KAGhB,yBAAKxB,UAAU,SACX,4BAAQiB,KAAK,UAAb,cACA,kBAAC,IAAD,CAAMjB,UAAU,SAASyB,GAAG,cAA5B,kBACA,yBAAKN,GAAG,oBCKrBQ,MA7Cf,WACI,IAAM7B,EAAWC,cAejB,OAAIU,aAAamB,QAAQ,SAErB,yBAAK5B,UAAU,UACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,aACZ,oCACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,4BAAQ6B,QAAS,kBAAM/B,EAAS,iBAAhC,wBAEJ,yBAAKE,UAAU,YACX,4BAAQ6B,QAAS,kBAAM/B,EAAS,iBAAhC,iBAEJ,kDASZ,iDC4BGgC,MAnEf,WAAuB,IAAD,EACMrC,mBAAS,IADf,mBACXsC,EADW,KACLC,EADK,OAEoBvC,mBAAS,IAF7B,mBAEXwC,EAFW,KAEEC,EAFF,OAGMzC,mBAAS,IAHf,mBAGX0C,EAHW,KAGLC,EAHK,OAIgB3C,mBAAS,IAJzB,mBAIX4C,EAJW,KAIAC,EAJA,KAoBlB,OAfiBvC,cAebU,aAAamB,QAAQ,SAEjB,yBAAK5B,UAAU,UACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,YAAYC,SAjBvB,SAAAC,MAkBD,mDAEA,yBAAKF,UAAU,aACX,yBAAKA,UAAU,YACX,2BAAOgB,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,OAAOC,MAAOU,EAAMT,SAAU,SAACpB,GAAD,OAAW8B,EAAQ9B,EAAMqB,OAAOF,QAAQG,UAAQ,KAGvI,yBAAKxB,UAAU,YACX,2BAAOgB,QAAQ,mBAAf,eACA,2BAAOC,KAAK,cAAcC,KAAK,kBAAkBC,GAAG,kBAAkBE,MAAOY,EAAaX,SAAU,SAACpB,GAAD,OAAWgC,EAAehC,EAAMqB,OAAOF,QAAQD,YAAY,cAC3JI,UAAQ,KAEhB,yBAAKxB,UAAU,YACX,2BAAOgB,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,OAAOC,MAAOc,EAAMb,SAAU,SAACpB,GAAD,OAAWkC,EAAQlC,EAAMqB,OAAOF,QAAQG,UAAQ,KAGvI,yBAAKxB,UAAU,YACX,2BAAOgB,QAAQ,iBAAf,aACA,2BAAOC,KAAK,YAAYC,KAAK,gBAAgBC,GAAG,gBAAgBE,MAAOgB,EAAWf,SAAU,SAACpB,GAAD,OAAWoC,EAAapC,EAAMqB,OAAOF,QAAQD,YAAY,YACjJI,UAAQ,KAGhB,yBAAKxB,UAAU,SACX,4BAAQiB,KAAK,UAAb,4BAUpB,iD,gBCFGa,MAxDf,WACqB/B,cAAjB,IADkB,EAEcN,mBAAS,CAAC,CAAC8C,MAAQ,qFAAsFpB,GAAK,GAAID,KAAO,WAAasB,KAAO,YAAQC,UAAY,QAAS,CAACF,MAAQ,qFAAsFpB,GAAK,GAAID,KAAO,WAAasB,KAAO,YAAQC,UAAY,UAF/U,mBAEXC,EAFW,KAkBlB,OAlBkB,KAkBdjC,aAAamB,QAAQ,SAEjB,yBAAK5B,UAAU,UACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,YAAYC,SAlBvB,SAAAC,MAmBD,4CACCwC,EAASC,OAAS,EAC7BD,EAASE,KAAI,SAACC,GAAD,OACX,yBAAK7C,UAAU,eAAe8C,IAAKD,EAAQ1B,GAAI4B,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAQN,MAAjB,KAA4BU,eAAiB,UAAWC,iBAAkB,cAC/I,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,yBAAKlD,UAAU,MACb,yBAAKA,UAAU,aACb,4BAAK6C,EAAQ3B,OAEb,8BAAO2B,EAAQL,OAEjB,6BACE,8BAAOK,EAAQJ,gBAKvB,8DAQF,iD,uBCxDNU,EAAO,+BAmCb,IAKeC,EALF,CACX/C,KAjCF,SAAcgD,EAAMC,GAElB,OADAC,QAAQC,IAAIF,GACLG,MAAM,GAAD,OAAIN,GAAJ,OAAWE,GAAQ,CAC7BK,YAAa,OACbC,QAAS,CAAE,eAAgB,iCAAkC,iBAAkB,QAC/EL,KAAMM,KAAKC,UAAUP,GACrBQ,OAAQ,OACRC,KAAM,SAELxD,MAAK,SAASmC,GACb,OAAOA,EAASsB,UAEjBzD,MAAK,SAASI,GACb,OAAOA,MAqBXsD,IAjBF,SAAaZ,GACX,OAAOI,MAAM,GAAD,OAAIN,GAAJ,OAAWE,GAAQ,CAC7BK,YAAa,OACbC,QAAS,CAAE,eAAgB,iCAAkC,iBAAkB,QAC/EG,OAAQ,MACRC,KAAM,SAELxD,MAAK,SAASmC,GACb,OAAOA,EAASsB,UAEjBzD,MAAK,SAASI,GACb,OAAOA,OC/BPuD,EAAsB,0F,4CAY5B,sBAAAC,EAAA,sEACeC,aAAaC,oBAD5B,oF,kEAoCA,4BAAAF,EAAA,sEAE8BG,UAAUC,cAAcC,MAFtD,cAEQD,EAFR,gBAIeA,EAAcE,YAAYC,UAAU,CAC/CC,iBAAiB,EACjBC,qBAAsBV,IAN1B,oF,sBCnCA,IAAMW,EDPG,kBAAmBP,WAAa,gBAAiBQ,OCU3C,SAASC,IAAwB,IAAD,EACNtF,mBAAS2E,aAAaY,YADhB,mBACtCC,EADsC,KACzBC,EADyB,OAIGzF,mBAAS,MAJZ,mBAItC0F,EAJsC,KAIpBC,EAJoB,OAMmB3F,qBANnB,mBAMtC4F,EANsC,KAMZC,EANY,OAQnB7F,mBAAS,MARU,mBAQtCqB,EARsC,KAQ/ByE,EAR+B,OAUf9F,oBAAS,GAVM,mBAUtC+F,EAVsC,KAU7BC,EAV6B,KAa7CC,qBAAU,WACJb,IACFY,GAAW,GACXF,GAAS,GDQNjB,UAAUC,cAAcoB,SAAS,UCPZpF,MAAK,WAC3BkF,GAAW,SAGd,IAIHC,qBAAU,WACRD,GAAW,GACXF,GAAS,GACoB,uCAAG,4BAAApB,EAAA,sEDmB3BG,UAAUC,cAAcC,MAC5BjE,MAAK,SAASgE,GACb,OAAOA,EAAcE,YAAYmB,qBAElCrF,MAAK,SAASsF,GACb,OAAOA,KCxBuB,OACxBC,EADwB,OAE9BV,EAAoBU,GACpBL,GAAW,GAHmB,2CAAH,oDAK7BM,KACC,IAgFH,MAAO,CACLC,yBAxE+B,WAC/BP,GAAW,GACXF,GAAS,G,0CACTU,GAAoB1F,MAAK,SAAA2F,GACvBhB,EAAgBgB,GACA,YAAZA,GACFX,EAAS,CACPrE,KAAM,iBACNiF,QAAS,kDACTC,KAAM,IAGVX,GAAW,OA6DbY,kCApDwC,WACxCZ,GAAW,GACXF,GAAS,G,0CACTe,GACG/F,MAAK,SAASgG,GACbnB,EAAoBmB,GACpBd,GAAW,MAEZ5E,OAAM,SAAA2F,GACLjD,QAAQzC,MAAM,gDAAiD0F,EAAK,QAASA,EAAItF,KAAM,WAAYsF,EAAIL,QAAS,QAASK,EAAIJ,MAC7Hb,EAASiB,GACTf,GAAW,OA0CfgB,oCAlC0C,WAC1ChB,GAAW,GACXF,GAAS,GACTnC,EACG/C,KAAK,gBAAiB8E,GACtB5E,MAAK,SAASmC,GACb4C,EAA4B5C,EAASvB,IACrCsE,GAAW,MAEZ5E,OAAM,SAAA2F,GACLf,GAAW,GACXF,EAASiB,OAwBbnB,2BACAqB,wBAlB2B,uCAAG,sBAAAvC,EAAA,6DAC9BsB,GAAW,GACXF,GAAS,GAFqB,SAGxBnC,EAAK/C,KAAL,wBAA2BgF,GAA4B,CAACsB,MAAQ,UAAU9F,OAAM,SAAA2F,GACpFf,GAAW,GACXF,EAASiB,MALmB,OAO9Bf,GAAW,GAPmB,2CAAH,qDAmB3BR,cACAJ,4BACAM,mBACArE,QACA0E,WCzIJ,IAAMoB,EAAU,SAAC,GAAD,SAAGpB,QAAyB,yBAAKxF,UAAU,cAAf,4CAA6E,MACnH6G,EAAQ,SAAC,GAAD,IAAG/F,EAAH,EAAGA,MAAH,OACZA,EACE,6BAASd,UAAU,aACjB,4BAAKc,EAAMI,MACX,8CAAoBJ,EAAMqF,SAC1B,2CAAiBrF,EAAMsF,OAEvB,MAES,SAASU,IAAwB,IAAD,EAYzC/B,IAVFE,EAF2C,EAE3CA,YACAJ,EAH2C,EAG3CA,0BACAM,EAJ2C,EAI3CA,iBACAa,EAL2C,EAK3CA,yBACAK,EAN2C,EAM3CA,kCACAI,EAP2C,EAO3CA,oCACApB,EAR2C,EAQ3CA,yBACAqB,EAT2C,EAS3CA,wBACA5F,EAV2C,EAU3CA,MACA0E,EAX2C,EAW3CA,QAGIuB,EAAmC,YAAhB9B,EAEzB,OACE,8BACE,kBAAC,EAAD,CAASO,QAASA,IAElB,qDAA2BX,GAA6B,MAAxD,8BAEA,4EACgD,gCAASI,GADzD,KAIA,kBAAC,EAAD,CAAOnE,MAAOA,IAEd,4BAAQkG,UAAWnC,GAA6BkC,EAAkBlF,QAASmE,GACxEe,EAAmB,kBAAoB,wBAG1C,4BAAQC,UAAWnC,IAA8BkC,GAAoB5B,EAAkBtD,QAASwE,GAC7FlB,EAAmB,4BAA8B,oCAGpD,4BAAQ6B,UAAW7B,GAAoBE,EAA0BxD,QAAS4E,GACvEpB,EAA2B,iCAAmC,oCAGhEA,GACC,6BACE,wEACA,4BAAQxD,QAAS6E,GAAjB,wBAIJ,iCACE,sEACA,6BACE,8BAAO9C,KAAKC,UAAUsB,EAAkB,KAAM,SCtCxD,SAASf,IACP,OACE,yBAAKpE,UAAU,OACb,gEACA,kBAAC8G,EAAD,OAKN,SAASG,IAEP,OACE,yBAAKlE,MAAO,CAACmE,QAAS,OACpBC,cAAe,SACfC,WAAY,SAAUC,IAAK,SAC3B,kBAAC,IAAD,CAAM5F,GAAG,YAAYsB,MAAO,CAACuE,OAAQ,QACvCC,aAAc,OACdC,eAAiB,OACjBC,MAAO,OACPC,QAAS,SAJP,eAKA,kBAAC,IAAD,CAAMjG,GAAG,aAAasB,MAAO,CAACuE,OAAQ,QACxCC,aAAc,OACdE,MAAO,OACPD,eAAiB,OACjBE,QAAS,SAJP,aAKF,kBAAC,IAAD,CAAMjG,GAAG,gBAAgBsB,MAAO,CAACuE,OAAQ,QACzCC,aAAc,OACdE,MAAO,OACPD,eAAiB,OACjBE,QAAS,SAJT,iBASWC,MAjDf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOtE,KAAK,IAAIuE,QAAS,kBAACX,EAAD,QACzB,kBAAC,IAAD,CAAO5D,KAAK,YAAYuE,QAAS,kBAAC,EAAD,QACjC,kBAAC,IAAD,CAAOvE,KAAK,WAAWuE,QAAS,kBAAC,EAAD,QAChC,kBAAC,IAAD,CAAOvE,KAAK,WAAWuE,QAAS,kBAAC,EAAD,QAChC,kBAAC,IAAD,CAAOvE,KAAK,aAAauE,QAAS,kBAAC,EAAD,QAClC,kBAAC,IAAD,CAAOvE,KAAK,aAAauE,QAAS,kBAAC,EAAD,QAClC,kBAAC,IAAD,CAAOvE,KAAK,eAAeuE,QAAS,kBAAC,EAAD,UCbxC,kBAAmBtD,WACrBQ,OAAO+C,iBAAiB,QAAQ,WAC9BvD,UAAUC,cAAcoB,SAAS,sBAC9BpF,MAAK,SAAAuH,GACJvE,QAAQC,IAAI,iCAEb3C,OAAM,SAAAC,GACLyC,QAAQzC,MAAM,sCAAuCA,SAK7DiH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.13b2843c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.scss'\n\nfunction Connexion() {\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axios.post('https://backpwa.onrender.com/connexion', { email: email, password: password }, { header: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;application/json' } })\n            .then(res => {\n                event.preventDefault();\n                localStorage.setItem(\"token\", res.data.token);\n                localStorage.setItem(\"email\", email);\n                // alert('vous etes connectes')\n                navigate('/Connecte');\n            }).catch((error) => {\n                alert(\"error\");\n            });\n    };\n\n    return (\n        <div className='signin'>\n            <div className='box-signin'>\n                <form className='container' onSubmit={handleSubmit}>\n                    <h3>CONNEXION</h3>\n\n                    <div className='form-sign'>\n                        <div className=\"inputBox\">\n                            <label htmlFor=\"Email\">Email</label>\n                            <input type=\"email\" name=\"Email\" id=\"Email\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} required />\n                        </div>\n\n                        <div className=\"inputBox\">\n                            <label htmlFor=\"userPassword\">Mot de passe</label>\n                            <input type=\"password\" name=\"userPassword\" id=\"userPassword\" value={password} onChange={(event) => setPassword(event.target.value)} placeholder=\"Password\"\n                                required />\n                        </div>\n\n                        <div className='box-b'>\n                            <button type=\"submit\">Se connecter</button>\n                            <Link className=\"button\" to=\"/Inscrire\">S'inscrire ?</Link>\n                            <div id=\"signUpDiv\">\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Connexion;","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.scss'\n\nfunction Inscrire() {\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axios.post('https://backpwa.onrender.com/creation', { email: email, password: password }, { header: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;application/json' } })\n            .then(res => {\n                event.preventDefault();\n                localStorage.setItem(\"token\", res.data.token);\n                localStorage.setItem(\"email\", email);\n                alert('vous etes connectes')\n                navigate('/Connecte');\n            }).catch((error) => {\n                alert(\"error\");\n            });\n    };\n\n    return (\n        <div className='signin'>\n            <div className='box-signin'>\n                <form className='container' onSubmit={handleSubmit}>\n                    <h3>Inscription</h3>\n\n                    <div className='form-sign'>\n                        <div className=\"inputBox\">\n                            <label htmlFor=\"Email\">Email</label>\n                            <input type=\"email\" name=\"Email\" id=\"Email\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} required />\n                        </div>\n\n                        <div className=\"inputBox\">\n                            <label htmlFor=\"userPassword\">Mot de passe</label>\n                            <input type=\"password\" name=\"userPassword\" id=\"userPassword\" value={password} onChange={(event) => setPassword(event.target.value)} placeholder=\"Password\"\n                                required />\n                        </div>\n\n                        <div className='box-b'>\n                            <button type=\"submit\">S'inscrire</button>\n                            <Link className=\"button\" to=\"/Connexion\">Se connecter ?</Link>\n                            <div id=\"signUpDiv\">\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Inscrire;","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.scss'\n\nfunction HomePageConnecte() {\n    const navigate = useNavigate();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        // axios.post('https://backpwa.onrender.com/connexion', { email: email, password: password }, { header: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;application/json' } })\n        //     .then(res => {\n        //         event.preventDefault();\n        //         localStorage.setItem(\"token\", res.data.token);\n        //         alert('vous etes connectes')\n        //         // navigate('/AddBonPlan');\n        //     }).catch((error) => {\n        //         alert(\"error\");\n        //     });\n    };\n\n    if (localStorage.getItem(\"token\"))\n    return (\n        <div className='signin'>\n            <div className='box-signin'>\n                <form className='container'>\n                    <h3>HOME</h3>\n                    <div className='form-sign'>\n                        <div className=\"inputBox\">\n                            <button onClick={() => navigate('/AddBonPlan')}>Ajouter un bon plan</button>\n                        </div>\n                        <div className=\"inputBox\">\n                            <button onClick={() => navigate('/MesBonPlan')}>Mes bon plan</button>\n                        </div>\n                        <h3>Les Bons Plans</h3>\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n    else \n        return (\n            <div>\n                NON Connecté\n            </div>\n        )\n}\n\n\nexport default HomePageConnecte;","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport './Login.scss'\n\nfunction AddBonPlan() {\n    const [Name, setName] = useState(\"\");\n    const [Description, setDescription] = useState(\"\");\n    const [Prix, setPrix] = useState(\"\");\n    const [Promotion, setPromotion] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleSubmit = event => {\n        // event.preventDefault();\n        // axios.post('https://backpwa.onrender.com/connexion', { email: email, password: password }, { header: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;application/json' } })\n        //     .then(res => {\n        //         event.preventDefault();\n        //         localStorage.setItem(\"token\", res.data.token);\n        //         localStorage.setItem(\"email\", email);\n        //         // alert('vous etes connectes')\n        //         navigate('/Connecte');\n        //     }).catch((error) => {\n        //         alert(\"error\");\n        //     });\n    };\n    if (localStorage.getItem(\"token\"))\n        return (\n            <div className='signin'>\n                <div className='box-signin'>\n                    <form className='container' onSubmit={handleSubmit}>\n                        <h3>Ajouter un Bon Plan</h3>\n\n                        <div className='form-sign'>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"Name\">Name</label>\n                                <input type=\"Name\" name=\"Name\" id=\"Name\" placeholder=\"Name\" value={Name} onChange={(event) => setName(event.target.value)} required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"userdescription\">Description</label>\n                                <input type=\"description\" name=\"userdescription\" id=\"userdescription\" value={Description} onChange={(event) => setDescription(event.target.value)} placeholder=\"Description\"\n                                    required />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"Prix\">Prix</label>\n                                <input type=\"Prix\" name=\"Prix\" id=\"Prix\" placeholder=\"Prix\" value={Prix} onChange={(event) => setPrix(event.target.value)} required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"userPromotion\">Promotion</label>\n                                <input type=\"Promotion\" name=\"userPromotion\" id=\"userPromotion\" value={Promotion} onChange={(event) => setPromotion(event.target.value)} placeholder=\"Promotion\"\n                                    required />\n                            </div>\n\n                            <div className='box-b'>\n                                <button type=\"submit\">Ajouter un Bon Plan</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    else \n        return (\n            <div>\n                NON Connecté\n            </div>\n        )\n}\n\n\nexport default AddBonPlan;","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport { TiDelete } from 'react-icons/ti';\nimport { AiTwotoneEdit } from 'react-icons/ai';\nimport './Login.scss'\n\nfunction AddBonPlan() {\n    const navigate = useNavigate();\n    const [response, setResponse] = useState([{image : 'https://media.conforama.fr/m/export/Medias/700000/60000/6000/300/60/D_766364_A.jpg', id : '', name : 'Bon Plan' , prix : '120€', promotion : '-10%'}, {image : 'https://media.conforama.fr/m/export/Medias/700000/60000/6000/300/60/D_766364_A.jpg', id : '', name : 'Bon Plan' , prix : '120€', promotion : '-10%'}]);\n\n    const handleSubmit = event => {\n        // event.preventDefault();\n        // axios.post('https://backpwa.onrender.com/connexion', { email: email, password: password }, { header: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;application/json' } })\n        //     .then(res => {\n        //         event.preventDefault();\n        //         localStorage.setItem(\"token\", res.data.token);\n        //         localStorage.setItem(\"email\", email);\n        //         // alert('vous etes connectes')\n        //         navigate('/Connecte');\n        //     }).catch((error) => {\n        //         alert(\"error\");\n        //     });\n    };\n\n    if (localStorage.getItem(\"token\"))\n        return (\n            <div className='signin'>\n                <div className='box-signin'>\n                    <form className='container' onSubmit={handleSubmit}>\n                        <h3>Mes Bon Plan</h3>\n                        {response.length > 0 ? (\n              response.map((bonplan) => (\n                <div className='container-tb' key={bonplan.id} style={{ backgroundImage: `url(${bonplan.image})` , backgroundSize : 'contain', backgroundRepeat: 'no-repeat'}}>\n                  <TiDelete/>\n                  <AiTwotoneEdit />\n                  <div className='ff'>\n                    <div className='box-separ'>\n                      <h3>{bonplan.name}</h3>\n                    </div>\n                      <span>{bonplan.prix}</span>\n                    </div>\n                    <div>\n                      <span>{bonplan.promotion}</span>\n                    </div>\n                </div>\n              ))\n            ) : (\n              <p>Aucuns bons plans trouvée</p>\n            )}\n                    </form>\n                </div>\n            </div>\n        );\n    else \n        return (\n            <div>\n                NON Connecté\n            </div>\n        )\n}\n\n\nexport default AddBonPlan;","const host = \"https://backpwa.onrender.com\";\n// const host = \"http://localhost:8080\";\n\nfunction post(path, body) {\n  console.log(body)\n  return fetch(`${host}${path}`, {\n    credentials: \"omit\",\n    headers: { \"content-type\": \"application/json;charset=UTF-8\", \"sec-fetch-mode\": \"cors\" },\n    body: JSON.stringify(body),\n    method: \"POST\",\n    mode: \"cors\"\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      return data;\n    });\n}\n\nfunction get(path) {\n  return fetch(`${host}${path}`, {\n    credentials: \"omit\",\n    headers: { \"content-type\": \"application/json;charset=UTF-8\", \"sec-fetch-mode\": \"cors\" },\n    method: \"GET\",\n    mode: \"cors\"\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      return data;\n    });\n}\n\nconst http = {\n  post: post,\n  get: get\n};\n\nexport default http;\n","const pushServerPublicKey = \"BIN2Jc5Vmkmy-S3AUrcMlpKxJpLeVRAfu9WBqUbJ70SJOCWGCGXKY-Xzyh7HDr6KbRDGYHjqZ06OcS3BjD7uAm8\";\n\n/**\n * checks if Push notification and service workers are supported by your browser\n */\nfunction isPushNotificationSupported() {\n  return \"serviceWorker\" in navigator && \"PushManager\" in window;\n}\n\n/**\n * asks user consent to receive push notifications and returns the response of the user, one of granted, default, denied\n */\nasync function askUserPermission() {\n  return await Notification.requestPermission();\n}\n/**\n * shows a notification\n */\nfunction sendNotification() {\n  const img = \"/images/jason-leung-HM6TMmevbZQ-unsplash.jpg\";\n  const text = \"Take a look at this brand new t-shirt!\";\n  const title = \"New Product Available\";\n  const options = {\n    body: text,\n    icon: \"/images/jason-leung-HM6TMmevbZQ-unsplash.jpg\",\n    vibrate: [200, 100, 200],\n    tag: \"new-product\",\n    image: img,\n    badge: \"https://spyna.it/icons/android-icon-192x192.png\",\n    actions: [{ action: \"Detail\", title: \"View\", icon: \"https://via.placeholder.com/128/ff0000\" }]\n  };\n  navigator.serviceWorker.ready.then(function(serviceWorker) {\n    serviceWorker.showNotification(title, options);\n  });\n}\n\n/**\n *\n */\nfunction registerServiceWorker() {\n  return navigator.serviceWorker.register(\"/sw.js\");\n}\n\n/**\n *\n * using the registered service worker creates a push notification subscription and returns it\n *\n */\nasync function createNotificationSubscription() {\n  //wait for service worker installation to be ready\n  const serviceWorker = await navigator.serviceWorker.ready;\n  // subscribe and return the subscription\n  return await serviceWorker.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: pushServerPublicKey\n  });\n}\n\n/**\n * returns the subscription if present or nothing\n */\nfunction getUserSubscription() {\n  //wait for service worker installation to be ready, and then\n  return navigator.serviceWorker.ready\n    .then(function(serviceWorker) {\n      return serviceWorker.pushManager.getSubscription();\n    })\n    .then(function(pushSubscription) {\n      return pushSubscription;\n    });\n}\n\nexport {\n  isPushNotificationSupported,\n  askUserPermission,\n  registerServiceWorker,\n  sendNotification,\n  createNotificationSubscription,\n  getUserSubscription\n};\n","import { useState, useEffect } from \"react\";\nimport http from \"./utils/http\";\n//the function to call the push server: https://github.com/Spyna/push-notification-demo/blob/master/front-end-react/src/utils/http.js\n\nimport {\n  isPushNotificationSupported,\n  askUserPermission,\n  registerServiceWorker,\n  createNotificationSubscription,\n  getUserSubscription\n} from \"./push-notifications\";\n//import all the function created to manage the push notifications\n\nconst pushNotificationSupported = isPushNotificationSupported();\n//first thing to do: check if the push notifications are supported by the browser\n\nexport default function usePushNotifications() {\n  const [userConsent, setSuserConsent] = useState(Notification.permission);\n  //to manage the user consent: Notification.permission is a JavaScript native function that return the current state of the permission\n  //We initialize the userConsent with that value\n  const [userSubscription, setUserSubscription] = useState(null);\n  //to manage the use push notification subscription\n  const [pushServerSubscriptionId, setPushServerSubscriptionId] = useState();\n  //to manage the push server subscription\n  const [error, setError] = useState(null);\n  //to manage errors\n  const [loading, setLoading] = useState(true);\n  //to manage async actions\n\n  useEffect(() => {\n    if (pushNotificationSupported) {\n      setLoading(true);\n      setError(false);\n      registerServiceWorker().then(() => {\n        setLoading(false);\n      });\n    }\n  }, []);\n  //if the push notifications are supported, registers the service worker\n  //this effect runs only the first render\n  \n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    const getExixtingSubscription = async () => {\n      const existingSubscription = await getUserSubscription();\n      setUserSubscription(existingSubscription);\n      setLoading(false);\n    };\n    getExixtingSubscription();\n  }, []);\n  //Retrieve if there is any push notification subscription for the registered service worker\n  // this use effect runs only in the first render\n\n  /**\n   * define a click handler that asks the user permission,\n   * it uses the setSuserConsent state, to set the consent of the user\n   * If the user denies the consent, an error is created with the setError hook\n   */\n  const onClickAskUserPermission = () => {\n    setLoading(true);\n    setError(false);\n    askUserPermission().then(consent => {\n      setSuserConsent(consent);\n      if (consent !== \"granted\") {\n        setError({\n          name: \"Consent denied\",\n          message: \"You denied the consent to receive notifications\",\n          code: 0\n        });\n      }\n      setLoading(false);\n    });\n  };\n  //\n\n  /**\n   * define a click handler that creates a push notification subscription.\n   * Once the subscription is created, it uses the setUserSubscription hook\n   */\n  const onClickSusbribeToPushNotification = () => {\n    setLoading(true);\n    setError(false);\n    createNotificationSubscription()\n      .then(function(subscrition) {\n        setUserSubscription(subscrition);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"Couldn't create the notification subscription\", err, \"name:\", err.name, \"message:\", err.message, \"code:\", err.code);\n        setError(err);\n        setLoading(false);\n      });\n  };\n\n  /**\n   * define a click handler that sends the push susbcribtion to the push server.\n   * Once the subscription ics created on the server, it saves the id using the hook setPushServerSubscriptionId\n   */\n  const onClickSendSubscriptionToPushServer = () => {\n    setLoading(true);\n    setError(false);\n    http\n      .post(\"/subscription\", userSubscription)\n      .then(function(response) {\n        setPushServerSubscriptionId(response.id);\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n        setError(err);\n      });\n  };\n\n  /**\n   * define a click handler that request the push server to send a notification, passing the id of the saved subscription\n   */\n  const onClickSendNotification = async () => {\n    setLoading(true);\n    setError(false);\n    await http.post(`/subscription/${pushServerSubscriptionId}`, {title : 'jihad'}).catch(err => {\n      setLoading(false);\n      setError(err);\n    });\n    setLoading(false);\n  };\n\n  /**\n   * returns all the stuff needed by a Component\n   */\n  return {\n    onClickAskUserPermission,\n    onClickSusbribeToPushNotification,\n    onClickSendSubscriptionToPushServer,\n    pushServerSubscriptionId,\n    onClickSendNotification,\n    userConsent,\n    pushNotificationSupported,\n    userSubscription,\n    error,\n    loading\n  };\n}\n","import React from \"react\";\nimport usePushNotifications from \"./usePushNotifications\";\n\nconst Loading = ({ loading }) => (loading ? <div className=\"app-loader\">Please wait, we are loading something...</div> : null);\nconst Error = ({ error }) =>\n  error ? (\n    <section className=\"app-error\">\n      <h2>{error.name}</h2>\n      <p>Error message : {error.message}</p>\n      <p>Error code : {error.code}</p>\n    </section>\n  ) : null;\n\nexport default function PushNotificationDemo() {\n  const {\n    userConsent,\n    pushNotificationSupported,\n    userSubscription,\n    onClickAskUserPermission,\n    onClickSusbribeToPushNotification,\n    onClickSendSubscriptionToPushServer,\n    pushServerSubscriptionId,\n    onClickSendNotification,\n    error,\n    loading\n  } = usePushNotifications();\n\n  const isConsentGranted = userConsent === \"granted\";\n\n  return (\n    <main>\n      <Loading loading={loading} />\n\n      <p>Push notification are {!pushNotificationSupported && \"NOT\"} supported by your device.</p>\n\n      <p>\n        User consent to recevie push notificaitons is <strong>{userConsent}</strong>.\n      </p>\n\n      <Error error={error} />\n\n      <button disabled={!pushNotificationSupported || isConsentGranted} onClick={onClickAskUserPermission}>\n        {isConsentGranted ? \"Consent granted\" : \" Ask user permission\"}\n      </button>\n\n      <button disabled={!pushNotificationSupported || !isConsentGranted || userSubscription} onClick={onClickSusbribeToPushNotification}>\n        {userSubscription ? \"Push subscription created\" : \"Create Notification subscription\"}\n      </button>\n\n      <button disabled={!userSubscription || pushServerSubscriptionId} onClick={onClickSendSubscriptionToPushServer}>\n        {pushServerSubscriptionId ? \"Subscrption sent to the server\" : \"Send subscription to push server\"}\n      </button>\n\n      {pushServerSubscriptionId && (\n        <div>\n          <p>The server accepted the push subscrption!</p>\n          <button onClick={onClickSendNotification}>Send a notification</button>\n        </div>\n      )}\n\n      <section>\n        <h4>Your notification subscription details</h4>\n        <pre>\n          <code>{JSON.stringify(userSubscription, null, \" \")}</code>\n        </pre>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Connexion from './Connexion'\nimport Inscrire from './Inscription'\nimport HomePageConnecte from './HomePageConnecte'\nimport AddBonPlan from './AjouterBonPlan'\nimport MesBonPlan from './MesBonPlans'\nimport PushNotificationDemo from \"./PushNotificationDemo\";\nimport { Routes, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"Connexion\" element={<Connexion />} />\n        <Route path=\"Inscrire\" element={<Inscrire />} />\n        <Route path=\"Connecte\" element={<HomePageConnecte />} />\n        <Route path=\"AddBonPlan\" element={<AddBonPlan />} />\n        <Route path=\"MesBonPlan\" element={<MesBonPlan />} />\n        <Route path=\"Notification\" element={<Notification />} />\n    </Routes>\n  );\n}\n\n\nfunction Notification() {\n  return (\n    <div className=\"App\">\n      <h1>React Web Push notification demo</h1>\n      <PushNotificationDemo />\n    </div>\n  )\n}\n\nfunction Home() {\n  \n  return (\n    <div style={{display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center', gap: '2rem'}}>\n      <Link to='/Inscrire' style={{border: 'solid',\n    borderRadius: '10px',\n    textDecoration : 'none',\n    color: 'grey',\n    padding: '1rem'}}>Inscription</Link>\n      <Link to='/Connexion' style={{border: 'solid',\n    borderRadius: '10px',\n    color: 'grey',\n    textDecoration : 'none',\n    padding: '1rem'}}>Connexion</Link>\n    <Link to='/Notification' style={{border: 'solid',\n    borderRadius: '10px',\n    color: 'grey',\n    textDecoration : 'none',\n    padding: '1rem'}}>Notification</Link>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then(registration => {\n        console.log('Service Worker registered!');\n      })\n      .catch(error => {\n        console.error('Service Worker registration failed:', error);\n      });\n  });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}